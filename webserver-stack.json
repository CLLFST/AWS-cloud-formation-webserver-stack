{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "06787c47-bdc5-4a80-8d74-ae27ce065f82": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 496,
          "y": 66
        },
        "z": 0,
        "embeds": [],
        "ismemberof": [
          "ecd25ebd-2b79-4dae-ae54-1a73d5272b61"
        ],
        "dependson": [
          "ecd25ebd-2b79-4dae-ae54-1a73d5272b61"
        ]
      },
      "ecd25ebd-2b79-4dae-ae54-1a73d5272b61": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 494,
          "y": 147
        },
        "z": 0,
        "embeds": []
      },
      "a62b3203-cb25-4311-8634-23009bff7533": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 400.4891280273296,
          "y": 99.2971009899027
        },
        "z": 0,
        "embeds": [],
        "ismemberof": [
          "7d6e5f58-798a-46dd-887d-800d203b8f38"
        ],
        "dependson": [
          "7d6e5f58-798a-46dd-887d-800d203b8f38"
        ]
      },
      "7d6e5f58-798a-46dd-887d-800d203b8f38": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 310,
          "y": 110
        },
        "z": 0,
        "embeds": []
      }
    }
  },
  "Resources": {
    "EC2I1G4IH": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            {
              "Fn::FindInMap": [
                "AWSInstanceType2Arch",
                {
                  "Ref": "InstanceType"
                },
                "Arch"
              ]
            }
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "SecurityGroups": [
          {
            "Ref": "EC2SG3N91I"
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "apt-get update && apt-get upgrade -y aws-cfn-bootstrap\n",
                "# Install the files and packages from the metadata\n",
                "/opt/aws/bin/cfn-init -v ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource WebServerInstance ",
                "         --configsets InstallAndRun ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "# Signal the status from cfn-init\n",
                "/opt/aws/bin/cfn-signal -e $? ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource WebServerInstance ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "06787c47-bdc5-4a80-8d74-ae27ce065f82"
        },
        "Install": {
          "packages": {
            "apt": {
              "apache2": [],
              "default-jdk": []
            }
          },
          "files": {
            "/var/www/html/index.html": {
              "source": "https://github.com/sbouii/AWS-cloud-formation-webserver-stack/blob/master/index.html",
              "mode": "000600",
              "owner": "apache",
              "group": "apache"
            },
            "/etc/cfn/cfn-hup.conf": {
              "content": {
                "Fn::Join": [
                  "",
                  [
                    "[main]\n",
                    "stack=",
                    {
                      "Ref": "AWS::StackId"
                    },
                    "\n",
                    "region=",
                    {
                      "Ref": "AWS::Region"
                    },
                    "\n"
                  ]
                ]
              },
              "mode": "000400",
              "owner": "root",
              "group": "root"
            },
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
              "content": {
                "Fn::Join": [
                  "",
                  [
                    "[cfn-auto-reloader-hook]\n",
                    "triggers=post.update\n",
                    "path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init\n",
                    "action=/opt/aws/bin/cfn-init -v ",
                    "         --stack ",
                    {
                      "Ref": "AWS::StackName"
                    },
                    "         --resource WebServerInstance ",
                    "         --configsets InstallAndRun ",
                    "         --region ",
                    {
                      "Ref": "AWS::Region"
                    },
                    "\n",
                    "runas=root\n"
                  ]
                ]
              }
            }
          },
          "services": {
            "systemd": {
              "apache2": {
                "enabled": "true",
                "ensureRunning": "true"
              },
              "cfn-hup": {
                "enabled": "true",
                "ensureRunning": "true",
                "files": [
                  "/etc/cfn/cfn-hup.conf",
                  "/etc/cfn/hooks.d/cfn-auto-reloadr.conf"
                ]
              }
            }
          }
        }
      },
      "DependsOn": [
        "EC2SG3N91I"
      ]
    },
    "EC2SG3N91I": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTP access via port 80",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SSHLocation"
            }
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "ecd25ebd-2b79-4dae-ae54-1a73d5272b61"
        }
      }
    },
    "RDSDBI39LJE": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBName": {
          "Ref": "DBName"
        },
        "AllocatedStorage": {
          "Ref": "DBAllocatedStorage"
        },
        "DBInstanceClass": {
          "Ref": "DBClass"
        },
        "Engine": "postgres",
        "MasterUsername": {
          "Ref": "DBUsername"
        },
        "MasterUserPassword": {
          "Ref": "DBPassword"
        },
        "DBParameterGroupName": {
          "Ref": "RDSDBPG1X0BM"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "a62b3203-cb25-4311-8634-23009bff7533"
        }
      },
      "DependsOn": [
        "RDSDBPG1X0BM"
      ]
    },
    "RDSDBPG1X0BM": {
      "Type": "AWS::RDS::DBParameterGroup",
      "Properties": {
        "Description": "Database Parameter Group + pg_stat_statements",
        "Family": "postgres9.5",
        "Parameters": {
          "shared_preload_libraries": "pg_stat_statements"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "7d6e5f58-798a-46dd-887d-800d203b8f38"
        }
      }
    }
  },
  "Mappings": {
    "AWSInstanceType2Arch": {
      "t2.micro": {
        "Arch": "64"
      }
    },
    "AWSRegionArch2AMI" :   { 
      "us-east-1": {
        "64": "ami-f4cc1de2"
      }
    }
  },
  "Outputs": {
    "WebsiteURL": {
      "Description": "URL for newly created Apache server",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "EC2I1G4IH",
                "PublicDnsName"
              ]
            }
          ]
        ]
      }
    },
    "JDBCConnectionString": {
      "Description": "JDBC connection string for database",
      "Value": {
        "Fn::Join": [
          "",
          [
            "jdbc:postgresql://",
            {
              "Fn::GetAtt": [
                "RDSDBI39LJE",
                "Endpoint.Address"
              ]
            },
            ":",
            {
              "Fn::GetAtt": [
                "RDSDBI39LJE",
                "Endpoint.Port"
              ]
            },
            "/",
            {
              "Ref": "DBName"
            }
          ]
        ]
      }
    }
  },
  "Parameters": {
    "InstanceType": {
      "Description": "Type of EC2 instance to launch",
      "Type": "String",
      "Default": "t2.micro"
    },
    "WebServerPort": {
      "Description": "TCP/IP port of the web server",
      "Type": "String",
      "Default": "80"
    },
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "SSHLocation": {
      "Description": " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "DBName": {
      "Default": "pgdb",
      "Description": "The database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "8",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DBUsername": {
      "Default": "root",
      "NoEcho": "true",
      "Description": "The database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DBPassword": {
      "Default": "root1234",
      "NoEcho": "true",
      "Description": "The database admin account password",
      "Type": "String",
      "MinLength": "8"
    },
    "DBAllocatedStorage": {
      "Default": "5",
      "Description": "The size of the database (Gb)",
      "Type": "Number",
      "MinValue": "5",
      "MaxValue": "6144",
      "ConstraintDescription": "must be between 5+"
    },
    "DBClass": {
      "Default": "db.t2.micro",
      "Description": "Database instance class",
      "Type": "String",
      "AllowedValues": [
        "db.t2.micro",
        "db.m1.small",
        "db.m1.large",
        "db.m1.xlarge",
        "db.m2.xlarge"
      ],
      "ConstraintDescription": "must select a valid database instance type."
    }
  }
}
  
